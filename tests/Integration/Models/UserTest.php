<?php

namespace Tests\Integration\Models;

use App\Models\Category;
use App\Models\FrontCategory;
use App\Models\FrontUser;
use App\Models\Order;
use App\Models\User;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class  UserTest extends TestCase
{
    /**
     * @var int
     */
    public const ORDERS_COUNT_FOR_TESTS = 10;

    protected User $user;

    protected Order $order;

    protected Category $category;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        DB::beginTransaction();
        $this->user = FrontUser::factory()->create(['isAdmin' => false]) ?? new FrontUser();

        $this->category = FrontCategory::factory()->create() ?? new FrontCategory();
    }


    /**
     * Assert, that array, that will be returned by products function will
     * contain products with names, that was saved in products array during saving
     */
    public function test_products(): void
    {
        $products = [];
        for ($i = 0; $i < self::ORDERS_COUNT_FOR_TESTS; ++$i) {
            $product = self::createProduct($this->category->getAttribute('id'));
            $product->save();
            $products[] = $product->getName();
            self::creatreOrder($this->user->getAttribute('id'), $product->getId())->save();
        }

        foreach ($this->user->products() as $product) {
            $this->assertTrue(in_array($product->getAttribute('name'), $products));
        }
    }


    protected function tearDown(): void
    {
        DB::rollBack();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
